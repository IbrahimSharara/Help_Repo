1 - create new class and add the password and confirm password feilds

 public class CustomerRegistration

    {

        [Required(ErrorMessage = "*")]

        [MaxLength(15, ErrorMessage = "Password cannot be longer than 15 characters.")]

        public string password { get; set; }

        [Required(ErrorMessage = "*")]

        [System.ComponentModel.DataAnnotations.Compare("password", ErrorMessage = "Confirm  Password doesn't match, Try again !")]

        public string ConfirmPassword { get; set; }

    }


#Step 2


Add Controller and add the action inside it 

public ActionResult CustomerRegistration()

        {

            return View();

        }

        [HttpPost]

        public ActionResult CustomerRegistration(CustomerRegistration Model)

        {

            if (ModelState.IsValid)

            {

                //Write the logic Here

            }

            return View();

        }

3 - create the view and add the following code and at the end of it add jquery validation to work client side not server side


@model MyFirstApp.Models.CustomerRegistration

 

@{

    ViewBag.Title = "Password Validation";

}

 

<h2>CustomerRegistration</h2>

 

@using (Html.BeginForm())

{

    @Html.AntiForgeryToken()

 

    <div class="form-horizontal">

        <h4>CustomerRegistration</h4>

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">

            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

            </div>

        </div>

 

        <div class="form-group">

            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

            </div>

        </div>

 

        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">

                <input type="submit" value="Create" class="btn btn-default" />

            </div>

        </div>

    </div>

}

 

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>

<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
