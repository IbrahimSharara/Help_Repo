# top-most EditorConfig file
root = true

[*]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs,csx}]
# C# code style
dotnet_sort_system_directives_first = true
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# 'var' preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# null-checking
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# pattern matching
dotnet_style_prefer_pattern_matching = true:suggestion
dotnet_style_prefer_switch_expression = true:suggestion

# usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true

# language features
csharp_style_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# naming rules
dotnet_naming_rule.interface_should_start_with_i.severity = suggestion
dotnet_naming_rule.interface_should_start_with_i.symbols  = interface_symbols
dotnet_naming_rule.interface_should_start_with_i.style    = prefix_i

dotnet_naming_rule.private_static_readonly_fields_are_camel_case_with_underscore.severity = suggestion
dotnet_naming_rule.private_static_readonly_fields_are_camel_case_with_underscore.symbols  = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_are_camel_case_with_underscore.style    = camel_case_underscore_prefix

dotnet_naming_rule.private_instance_fields_are_camel_case_with_underscore.severity = suggestion
dotnet_naming_rule.private_instance_fields_are_camel_case_with_underscore.symbols  = private_instance_fields
dotnet_naming_rule.private_instance_fields_are_camel_case_with_underscore.style    = camel_case_underscore_prefix

dotnet_naming_rule.async_methods_should_end_with_async.severity = suggestion
dotnet_naming_rule.async_methods_should_end_with_async.symbols  = async_methods
dotnet_naming_rule.async_methods_should_end_with_async.style    = end_with_async

# symbols
dotnet_naming_symbols.interface_symbols.applicable_kinds           = interface
dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_symbols.private_instance_fields.applicable_kinds = field
dotnet_naming_symbols.private_instance_fields.applicable_accessibilities = private

dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.applicable_accessibilities = *
dotnet_naming_symbols.async_methods.required_modifiers = async

# styles
dotnet_naming_style.prefix_i.required_prefix = I
dotnet_naming_style.prefix_i.capitalization  = pascal_case

dotnet_naming_style.camel_case_underscore_prefix.required_prefix = _
dotnet_naming_style.camel_case_underscore_prefix.capitalization  = camel_case

dotnet_naming_style.end_with_async.required_suffix = Async
dotnet_naming_style.end_with_async.capitalization  = pascal_case
